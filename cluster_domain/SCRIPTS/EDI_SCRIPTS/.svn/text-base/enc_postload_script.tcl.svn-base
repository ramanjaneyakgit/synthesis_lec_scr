
#------------------------------------------------------------------
# ENC POST LOAD SCRIPT - PLACEMODE, ROUTEMODE & OPTMODE SETTINGS
#------------------------------------------------------------------

#------------------------------------------------
set WORK_AREA [pwd]
source ${WORK_AREA}/EDI_TEMP.tcl
set RC_COMMON_INPUTS ${WORK_AREA}/INPUTS
set EDI_COMMON_SCRIPTS ${WORK_AREA}/EDI_SCRIPTS
source ${RC_COMMON_INPUTS}/user_attr_file.tcl
#------------------------------------------------

puts "OS_INFO: Sourcing user's Encounter Placemode, Routemode and Optmode settings..."

setDesignMode -process $TECH_NODE
setMessageLimit 100

#---------------------------------
# Reading Scan def for Re-Ordering
#---------------------------------

if { [info exists SCAN_DEF($DESIGN)] } {
 	if {$SCAN_DEF($DESIGN) != "" } {
 	 	defIn $SCAN_DEF($DESIGN) 
 	 	setPlaceMode -reorderScan true
 	} 
}

#---------------------------------
# Multi CPU Settings
setDistributeHost -local
setMultiCpuUsage -localCpu $LOCAL_CPU_4_ENC

#---------------------------------
# PlaceMode settings
setInstancePlacementStatus -allHardMacros -status fixed
setPlaceMode -verboselevel verbose
setPlaceMode -clkGateAware true -timingDriven true 
setPlaceMode -maxRouteLayer $MAX_ROUTE_LAYER
setPlaceMode -wireLenOptEffort medium
setPlaceMode -honorSoftBlockage true
setPlaceMode -ignoreScan true -ignoreSpare true -moduleAwareSpare true -modulePlan true

if { [info exists FILLER_MIN_GAP] & $FILLER_MIN_GAP != "" } {
    setPlaceMode -fillerGapEffort high -fillerGapMinGap $FILLER_MIN_GAP -fillerGapMoveFlop true
} else {
    setPlaceMode -fillerGapEffort high -fillerGapMoveFlop true
}


#---------------------------------
# TrialRouteMode settings
setTrialRouteMode -minRouteLayer $MIN_ROUTE_LAYER -maxRouteLayer $MAX_ROUTE_LAYER 
setTrialRouteMode -highEffort true
setTrialRouteMode -detour true -handlePreroute true -keepExistingRoutes false

#---------------------------------
# DelayCalMode settings
setDelayCalMode -engine aae -considerMillerEffect true

#---------------------------------
# OptMode settings
setOptMode -allEndPoints true
set_global timing_apply_default_primary_input_assertion false

if { [info exists MAX_WIRE_LENGTH] & $MAX_WIRE_LENGTH != "" } {
	setOptMode -maxLength $MAX_WIRE_LENGTH
}

puts "OS_INFO: Done Sourcing Encounter placemode, routemode and optmode settings..."

#---------------------------------

